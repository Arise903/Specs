{
  "name": "patann",
  "version": "0.2.23",
  "summary": "pattern-aware, massively parallel, distributed, and scalable vector database framework.",
  "description": "PatANN is a pattern-aware, massively parallel, distributed, and scalable vector database algorithm and framework for efficient nearest neighbor search, operating both in-memory and on-disk. It uses recursive patterns to mitigate the curse of dimensionality and hubness in high-dimensional data, consistently outperforming conventional ANN libraries in industry-standard benchmarks with superior recall and speed.",
  "homepage": "https://patann.dev",
  "license": {
    "type": "Copyright",
    "file": "LICENSE"
  },
  "authors": {
    "Name": "support@mesibo.com"
  },
  "platforms": {
    "ios": "12.0"
  },
  "source": {
    "git": "https://github.com/mesibo/patannframeworks.git",
    "tag": "v0.2.23"
  },
  "ios": {
    "vendored_frameworks": "patann.xcframework"
  },
  "requires_arc": true,
  "libraries": [
    "c++",
    "stdc++"
  ],
  "user_target_xcconfig": {
    "EXCLUDED_ARCHS[sdk=iphonesimulator*]": "i386 x86_64",
    "HEADER_SEARCH_PATHS": "\"${{PODS_XCFRAMEWORKS_BUILD_DIR}}/patann/Headers\""
  },
  "pod_target_xcconfig": {
    "EXCLUDED_ARCHS[sdk=iphonesimulator*]": "i386 x86_64",
    "VALID_ARCHS": "arm64",
    "DEFINES_MODULE": "YES",
    "HEADER_SEARCH_PATHS": "\"${{PODS_XCFRAMEWORKS_BUILD_DIR}}/patann/Headers\""
  },
  "preserve_paths": [
    "patann.xcframework/**/module.modulemap",
    "patann.xcframework/**/*.h"
  ],
  "prepare_command": "# Try different methods to locate the correct pods directory\nPODS_DIR=\"\"\n\n# Method 1: Try PODS_ROOT if set\nif [ -n \"${PODS_ROOT}\" ]; then\n  if [ -f \"${PODS_ROOT}/patann/patann.xcframework/ios-arm64/Headers/patann.h\" ]; then\n    PODS_DIR=\"${PODS_ROOT}\"\n    echo \"Found headers using PODS_ROOT: ${PODS_DIR}\"\n  fi\nfi\n\n# Method 2: Try PODS_PODFILE_DIR_PATH if set\nif [ -z \"$PODS_DIR\" ] && [ -n \"${PODS_PODFILE_DIR_PATH}\" ]; then\n  POTENTIAL_DIR=\"${PODS_PODFILE_DIR_PATH}/Pods\"\n  if [ -f \"${POTENTIAL_DIR}/patann/patann.xcframework/ios-arm64/Headers/patann.h\" ]; then\n    PODS_DIR=\"${POTENTIAL_DIR}\"\n    echo \"Found headers using PODS_PODFILE_DIR_PATH: ${PODS_DIR}\"\n  fi\nfi\n\n# Method 3: Try current directory and navigate upwards\nif [ -z \"$PODS_DIR\" ]; then\n  CURRENT=$(pwd)\n  if [ -f \"${CURRENT}/patann.xcframework/ios-arm64/Headers/patann.h\" ]; then\n    # We're in the pod directory itself\n    PODS_DIR=\"${CURRENT}/..\"\n    echo \"Found headers in current directory: ${PODS_DIR}\"\n  elif [ -f \"${CURRENT}/Pods/patann/patann.xcframework/ios-arm64/Headers/patann.h\" ]; then\n    # We're in the project directory\n    PODS_DIR=\"${CURRENT}/Pods\"\n    echo \"Found headers in Pods subdirectory: ${PODS_DIR}\"\n  fi\nfi\n\n# If we found a valid pods directory with our headers\nif [ -n \"$PODS_DIR\" ]; then\n  # Define paths to modulemap files\n  DEVICE_MODULEMAP=\"patann.xcframework/ios-arm64/Headers/module.modulemap\"\n  SIMULATOR_MODULEMAP=\"patann.xcframework/ios-arm64-simulator/Headers/module.modulemap\"\n\n  # Define paths to header files\n  DEVICE_HEADER_PATH=\"${PODS_DIR}/patann/patann.xcframework/ios-arm64/Headers/patann.h\"\n  SIMULATOR_HEADER_PATH=\"${PODS_DIR}/patann/patann.xcframework/ios-arm64-simulator/Headers/patann.h\"\n\n  # Verify header files exist before proceeding\n  if [ -f \"$DEVICE_HEADER_PATH\" ] && [ -f \"$SIMULATOR_HEADER_PATH\" ]; then\n    # Create backup of original files\n    # cp \"$DEVICE_MODULEMAP\" \"${DEVICE_MODULEMAP}.bak\" 2>/dev/null || true\n    # cp \"$SIMULATOR_MODULEMAP\" \"${SIMULATOR_MODULEMAP}.bak\" 2>/dev/null || true\n\n    # Update the device modulemap with expanded absolute path\n    echo 'framework module patann {' > \"$DEVICE_MODULEMAP\"\n    echo '  umbrella header \"'$DEVICE_HEADER_PATH'\"' >> \"$DEVICE_MODULEMAP\"\n    echo '' >> \"$DEVICE_MODULEMAP\"\n    echo '  export *' >> \"$DEVICE_MODULEMAP\"\n    echo '  module * { export * }' >> \"$DEVICE_MODULEMAP\"\n    echo '}' >> \"$DEVICE_MODULEMAP\"\n\n    # Update the simulator modulemap with expanded absolute path\n    echo 'framework module patann {' > \"$SIMULATOR_MODULEMAP\"\n    echo '  umbrella header \"'$SIMULATOR_HEADER_PATH'\"' >> \"$SIMULATOR_MODULEMAP\"\n    echo '' >> \"$SIMULATOR_MODULEMAP\"\n    echo '  export *' >> \"$SIMULATOR_MODULEMAP\"\n    echo '  module * { export * }' >> \"$SIMULATOR_MODULEMAP\"\n    echo '}' >> \"$SIMULATOR_MODULEMAP\"\n\n    echo \"Successfully updated modulemap files with absolute paths\"\n  else\n    echo \"Error: Header files not found at expected locations. Modulemaps not modified.\"\n  fi\nelse\n  echo \"Warning: Could not locate header files. Modulemaps not modified.\"\nfi"
}
